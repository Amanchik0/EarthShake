// tabs/ProfileTab.tsx
import React, { useState, useEffect } from 'react';
import { Community } from '../../types/community';
import styles from '../../features/Community/CommunityEditPage/CommunityEditPage.module.css';

interface ProfileTabProps {
  community: Community;
  onSave: (updatedData: Partial<Community>) => void;
  onMessage: (message: string) => void;
  saving: boolean;
}

const ProfileTab: React.FC<ProfileTabProps> = ({ 
  community, 
  onSave, 
  onMessage, 
  saving 
}) => {
  const [communityData, setCommunityData] = useState({
    name: '',
    description: '',
    content: '',
    type: '',
    city: '',
    imageUrls: ['']
  });

  const [imagePreview, setImagePreview] = useState<string>('');
  const [uploadingImage, setUploadingImage] = useState(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (community) {
      setCommunityData({
        name: community.name,
        description: community.description,
        content: community.content,
        type: community.type,
        city: community.city,
        imageUrls: community.imageUrls.length > 0 ? community.imageUrls : ['']
      });
      setImagePreview(community.imageUrls[0] || '/api/placeholder/150/150');
    }
  }, [community]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { id, value } = e.target;
    setCommunityData(prev => ({ ...prev, [id]: value }));
  };

  const handleImageUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (!file) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    if (!file.type.startsWith('image/')) {
      onMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
    if (file.size > 5 * 1024 * 1024) {
      onMessage('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB');
      return;
    }

    setUploadingImage(true);

    try {
      const token = localStorage.getItem('accessToken');
      const formData = new FormData();
      formData.append('file', file);

      const response = await fetch('http://localhost:8090/api/media/upload', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${token}`
        },
        body: formData
      });

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.status}`);
      }

      const imageUrl = await response.text(); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
      console.log('üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', imageUrl);

      // –û–±–Ω–æ–≤–ª—è–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const fullImageUrl = imageUrl.startsWith('http') ? imageUrl : `http://localhost:8090${imageUrl}`;
      
      setCommunityData(prev => ({
        ...prev,
        imageUrls: [fullImageUrl, ...prev.imageUrls.slice(1)]
      }));
      
      setImagePreview(fullImageUrl);
      onMessage('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!');

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      onMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    } finally {
      setUploadingImage(false);
    }
  };

  const handleSave = () => {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!communityData.name.trim()) {
      onMessage('–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
      return;
    }

    if (!communityData.description.trim()) {
      onMessage('–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
      return;
    }

    if (!communityData.city.trim()) {
      onMessage('–ì–æ—Ä–æ–¥ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
      return;
    }

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const updatedData: Partial<Community> = {
      name: communityData.name.trim(),
      description: communityData.description.trim(),
      content: communityData.content.trim(),
      type: communityData.type,
      city: communityData.city.trim(),
      imageUrls: communityData.imageUrls.filter(url => url.trim() !== '')
    };

    onSave(updatedData);
  };

  const handleCancel = () => {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    setCommunityData({
      name: community.name,
      description: community.description,
      content: community.content,
      type: community.type,
      city: community.city,
      imageUrls: community.imageUrls.length > 0 ? community.imageUrls : ['']
    });
    setImagePreview(community.imageUrls[0] || '/api/placeholder/150/150');
    onMessage('–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã');
  };

  return (
    <div className={styles.profileSection}>
      <div className={styles.sectionTitle}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</div>
      
      <div className={styles.profileHeader}>
        <div className={styles.profileImageContainer}>
          <img 
            src={imagePreview} 
            alt="–õ–æ–≥–æ—Ç–∏–ø —Å–æ–æ–±—â–µ—Å—Ç–≤–∞" 
            className={styles.profileImage} 
          />
          <label className={styles.imageUpload} title="–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ">
            <input
              type="file"
              accept="image/*"
              onChange={handleImageUpload}
              style={{ display: 'none' }}
              disabled={uploadingImage}
            />
            {uploadingImage ? (
              <div className={styles.spinner} style={{ width: '16px', height: '16px' }}></div>
            ) : (
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path>
                <circle cx="12" cy="13" r="4"></circle>
              </svg>
            )}
          </label>
        </div>
        
        <div className={styles.profileInfo}>
          <label htmlFor="name" className={styles.label}>
            –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ *
          </label>
          <input 
            type="text" 
            id="name" 
            value={communityData.name} 
            onChange={handleChange}
            className={styles.input}
            maxLength={100}
            required
          />
          
          <label htmlFor="city" className={styles.label}>
            –ì–æ—Ä–æ–¥ *
          </label>
          <input 
            type="text" 
            id="city" 
            value={communityData.city} 
            onChange={handleChange}
            className={styles.input}
            maxLength={50}
            required
          />
        </div>
      </div>
      
      <label htmlFor="description" className={styles.label}>
        –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ *
      </label>
      <textarea 
        id="description" 
        value={communityData.description} 
        onChange={handleChange}
        className={styles.textarea}
        maxLength={500}
        required
        placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, –µ–≥–æ —Ü–µ–ª–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏..."
      />
      
      <label htmlFor="content" className={styles.label}>
        –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
      </label>
      <textarea 
        id="content" 
        value={communityData.content} 
        onChange={handleChange}
        className={styles.textarea}
        maxLength={2000}
        placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ..."
        style={{ minHeight: '120px' }}
      />
      
      <div className={styles.formRow}>
        <div className={styles.formCol}>
          <label htmlFor="type" className={styles.label}>
            –ö–∞—Ç–µ–≥–æ—Ä–∏—è *
          </label>
          <select 
            id="type" 
            value={communityData.type} 
            onChange={handleChange}
            className={styles.select}
            required
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
            <option value="–∏—Å–∫—É—Å—Å—Ç–≤–æ">–ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ</option>
            <option value="—Å–ø–æ—Ä—Ç">–°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö</option>
            <option value="—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ IT</option>
            <option value="–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
            <option value="—Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ">–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ</option>
            <option value="hobby">–•–æ–±–±–∏</option>
            <option value="–±–∏–∑–Ω–µ—Å">–ë–∏–∑–Ω–µ—Å</option>
            <option value="–∑–¥–æ—Ä–æ–≤—å–µ">–ó–¥–æ—Ä–æ–≤—å–µ</option>
            <option value="–¥—Ä—É–≥–æ–µ">–î—Ä—É–≥–æ–µ</option>
          </select>
        </div>
      </div>
      
      <div className={styles.communityStats}>
        <div className={styles.sectionSubtitle}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</div>
        <div className={styles.statsRow}>
          <div className={styles.statItem}>
            <div className={styles.statNumber}>{community.numberMembers}</div>
            <div className={styles.statText}>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
          </div>
          <div className={styles.statItem}>
            <div className={styles.statNumber}>{community.eventsCount}</div>
            <div className={styles.statText}>–°–æ–±—ã—Ç–∏—è</div>
          </div>
          <div className={styles.statItem}>
            <div className={styles.statNumber}>{community.rating.toFixed(1)}</div>
            <div className={styles.statText}>–†–µ–π—Ç–∏–Ω–≥</div>
          </div>
          <div className={styles.statItem}>
            <div className={styles.statNumber}>{community.reviewsCount}</div>
            <div className={styles.statText}>–û—Ç–∑—ã–≤–æ–≤</div>
          </div>
        </div>
      </div>
      
      <div className={styles.buttonGroup}>
        <button 
          className={`${styles.button} ${styles.buttonSecondary}`}
          onClick={handleCancel}
          disabled={saving}
        >
          –û—Ç–º–µ–Ω–∏—Ç—å
        </button>
        <button 
          className={styles.button} 
          onClick={handleSave}
          disabled={saving || uploadingImage}
        >
          {saving ? (
            <>
              <div className={styles.spinner} style={{ width: '16px', height: '16px', marginRight: '8px' }}></div>
              –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
            </>
          ) : (
            '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è'
          )}
        </button>
      </div>
    </div>
  );
};

export default ProfileTab;