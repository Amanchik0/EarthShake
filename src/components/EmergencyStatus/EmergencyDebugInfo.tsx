// src/components/EmergencyStatus/EmergencyDebugInfo.tsx
import React, { useState } from 'react';
import { useAuth } from '../auth/AuthContext';
import { EmergencyResponse } from '../../types/emergencyTypes';
import styles from './EmergencyDebugInfo.module.css';

interface EmergencyDebugInfoProps {
  isEmergency: boolean;
  emergencyData: EmergencyResponse | null;
  isLoading: boolean;
  error: string | null;
  lastChecked: Date | null;
  onForceCheck: () => void;
}

const EmergencyDebugInfo: React.FC<EmergencyDebugInfoProps> = ({
  isEmergency,
  emergencyData,
  isLoading,
  error,
  lastChecked,
  onForceCheck
}) => {
  const { user } = useAuth();
  const [isExpanded, setIsExpanded] = useState(false);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  if (process.env.NODE_ENV !== 'development') return null;

  const formatTime = (date: Date | null) => {
    if (!date) return '–ù–∏–∫–æ–≥–¥–∞';
    return date.toLocaleTimeString('ru-RU');
  };

  const getNextCheckTime = () => {
    if (!lastChecked) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    const nextCheck = new Date(lastChecked.getTime() + 15000);
    return nextCheck.toLocaleTimeString('ru-RU');
  };

  return (
    <div className={styles.debugPanel}>
      <button 
        className={styles.toggleBtn}
        onClick={() => setIsExpanded(!isExpanded)}
      >
        üêõ Debug Emergency System {isExpanded ? '‚ñ≤' : '‚ñº'}
      </button>
      
      {isExpanded && (
        <div className={styles.debugContent}>
          <div className={styles.section}>
            <h4>üîß –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
            <div className={styles.info}>
              <span>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</span>
              <span>{user ? `${user.username} (${user.city})` : '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}</span>
            </div>
            <div className={styles.info}>
              <span>API URL:</span>
              <span>http://localhost:8090/api/events/emergency/{user?.city || 'Almaty'}</span>
            </div>
            <div className={styles.info}>
              <span>–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞:</span>
              <span>{formatTime(lastChecked)}</span>
            </div>
            <div className={styles.info}>
              <span>–°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:</span>
              <span>{getNextCheckTime()}</span>
            </div>
          </div>

          <div className={styles.section}>
            <h4>üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h4>
            <div className={styles.info}>
              <span>–†–µ–∂–∏–º –ß–°:</span>
              <span className={isEmergency ? styles.active : styles.inactive}>
                {isEmergency ? 'üö® –ê–ö–¢–ò–í–ï–ù' : '‚úÖ –û–¢–ö–õ–Æ–ß–ï–ù'}
              </span>
            </div>
            <div className={styles.info}>
              <span>–ó–∞–≥—Ä—É–∑–∫–∞:</span>
              <span>{isLoading ? ' –î–∞' : '‚è∏Ô∏è –ù–µ—Ç'}</span>
            </div>
            <div className={styles.info}>
              <span>–û—à–∏–±–∫–∞:</span>
              <span className={error ? styles.error : styles.success}>
                {error || '‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫'}
              </span>
            </div>
            <div className={styles.info}>
              <span>–°–æ–±—ã—Ç–∏—è –ß–°:</span>
              <span>{emergencyData?.event?.length || 0}</span>
            </div>
            <div className={styles.info}>
              <span>–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</span>
              <span>{emergencyData?.referenceInfo?.length || 0}</span>
            </div>
          </div>

          {emergencyData && (
            <div className={styles.section}>
              <h4>üìã –î–∞–Ω–Ω—ã–µ –ß–°</h4>
              <div className={styles.jsonData}>
                <pre>{JSON.stringify(emergencyData, null, 2)}</pre>
              </div>
            </div>
          )}

          <div className={styles.actions}>
            <button 
              className={styles.actionBtn}
              onClick={onForceCheck}
              disabled={isLoading}
            >
              {isLoading ? ' –ü—Ä–æ–≤–µ—Ä–∫–∞...' : ' –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞'}
            </button>
            
            <button 
              className={styles.actionBtn}
              onClick={() => {
                const city = user?.city || 'Almaty';
                const url = `http://localhost:8090/api/events/emergency/${city}`;
                window.open(url, '_blank');
              }}
            >
              üåê –û—Ç–∫—Ä—ã—Ç—å API –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default EmergencyDebugInfo;