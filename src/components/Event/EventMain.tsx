import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { BackendEventData, BackendUserData } from '../../types/event';
import { useAuth } from '../../components/auth/AuthContext';

interface EventMainProps {
  event: BackendEventData;
  styles: any
}

const EventMain: React.FC<EventMainProps> = ({ event, styles }) => {
  const navigate = useNavigate();
  const { user: currentUser } = useAuth();
  const [authorData, setAuthorData] = useState<BackendUserData | null>(null);
  const [loadingAuthor, setLoadingAuthor] = useState(true);
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∞ —Å–æ–±—ã—Ç–∏—è
  useEffect(() => {
    const fetchAuthorData = async () => {
      try {
        console.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∞: ${event.author}`);
        
        const response = await fetch(`http://localhost:8090/api/users/get-by-username/${event.author}`);
        
        if (response.ok) {
          const userData: BackendUserData = await response.json();
          console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∞:', userData);
          setAuthorData(userData);
        } else {
          console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∞');
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∞:', error);
      } finally {
        setLoadingAuthor(false);
      }
    };

    fetchAuthorData();
  }, [event.author]);

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ü–µ–Ω–∫–∞–º–∏
  const getScores = () => {
    if (!event.score) return [];
    if (Array.isArray(event.score)) return event.score;
    return [];
  };

  const getAverageScore = () => {
    const scores = getScores();
    if (scores.length === 0) return 0;
    
    const total = scores.reduce((sum, score) => {
      // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤: {username: rating} –∏–ª–∏ {username: "name", rating: number}
      const rating = score.rating || Object.values(score).find(val => typeof val === 'number') || 0;
      return sum + rating;
    }, 0);
    
    return total / scores.length;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
  const formatDate = (dateString: string) => {
    const options: Intl.DateTimeFormatOptions = { 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    };
    return new Date(dateString).toLocaleDateString('ru-RU', options);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
  const renderStars = () => {
    const stars = [];
    const averageRating = getAverageScore();
    
    for (let i = 1; i <= 5; i++) {
      stars.push(
        <span key={i} className={styles.star} style={{ color: i <= averageRating ? '#FFD700' : '#E0E0E0' }}>
          ‚òÖ
        </span>
      );
    }
    return stars;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–≥–æ–≤
  const renderTags = () => {
    return event.tags.map((tag, index) => (
      <span key={index} className={styles.tag}>
        #{tag}
      </span>
    ));
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ 2GIS
  const generate2GISLink = () => {
    const lng = event.location.x;
    const lat = event.location.y;
    return `https://2gis.kz/almaty/directions/points/%2C${lng}%2C${lat}`;
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Å–æ–±—ã—Ç–∏—è
  const isOwner = currentUser?.username === event.author;

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
  const handleEditEvent = () => {
    navigate(`/events/${event.id}/edit`);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–¥–∏–∞ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–∞—Å—Å–∏–≤–∞ –∏ —Å—Ç—Ä–æ–∫–∏)
  const getMediaUrls = (): string[] => {
    if (Array.isArray(event.mediaUrl)) {
      return event.mediaUrl;
    }
    return event.mediaUrl ? [event.mediaUrl] : [];
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
  const nextImage = () => {
    const mediaUrls = getMediaUrls();
    setCurrentImageIndex((prev) => (prev + 1) % mediaUrls.length);
  };

  const prevImage = () => {
    const mediaUrls = getMediaUrls();
    setCurrentImageIndex((prev) => (prev - 1 + mediaUrls.length) % mediaUrls.length);
  };

  const mediaUrls = getMediaUrls();
  const averageScore = getAverageScore();
  const scoresCount = getScores().length;

  return (
    <section className={styles.eventMain}>
      {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≥–∞–ª–µ—Ä–µ–∏ */}
      {mediaUrls.length > 0 && (
        <div className={styles.eventPhoto}>
          <img 
            src={mediaUrls[currentImageIndex]} 
            alt={event.title}
            onError={(e) => {
              const target = e.target as HTMLImageElement;
              target.src = '/api/placeholder/600/400';
            }}
          />
          
          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ) */}
          {mediaUrls.length > 1 && (
            <>
              <button 
                className={styles.imageNavButton + ' ' + styles.prevButton}
                onClick={prevImage}
                aria-label="–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
              >
                ‚ùÆ
              </button>
              <button 
                className={styles.imageNavButton + ' ' + styles.nextButton}
                onClick={nextImage}
                aria-label="–°–ª–µ–¥—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
              >
                ‚ùØ
              </button>
              
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
              <div className={styles.imageIndicators}>
                {mediaUrls.map((_, index) => (
                  <button
                    key={index}
                    className={`${styles.imageIndicator} ${index === currentImageIndex ? styles.active : ''}`}
                    onClick={() => setCurrentImageIndex(index)}
                    aria-label={`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${index + 1}`}
                  />
                ))}
              </div>
              
              {/* –°—á–µ—Ç—á–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
              <div className={styles.imageCounter}>
                {currentImageIndex + 1} / {mediaUrls.length}
              </div>
            </>
          )}
        </div>
      )}
      
      <div className={styles.eventInfo}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className={styles.titleSection}>
          <h1 className={styles.eventTitle}>{event.title}</h1>
          {isOwner && (
            <button 
              className={styles.editButton}
              onClick={handleEditEvent}
              title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ"
            >
              ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </button>
          )}
        </div>
        
        {/* –ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className={styles.eventMeta}>
          <div className={styles.metaItem}>
            <span className={styles.metaIcon}>üìÖ</span>
            <span>
              {event.metadata?.scheduledDate 
                ? formatDate(event.metadata.scheduledDate)
                : formatDate(event.dateTime)
              }
            </span>
          </div>
          
          <div className={styles.metaItem}>
            <span className={styles.metaIcon}>üìç</span>
            <span>{event.city}</span>
          </div>
          
          <div className={styles.metaItem}>
            <span className={styles.metaIcon}>üë§</span>
            <span>{event.author}</span>
          </div>
        </div>
        
        {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
        <div className={styles.eventDescription}>
          <h3>–û–ø–∏—Å–∞–Ω–∏–µ</h3>
          <p>{event.description}</p>
          {event.content && event.content !== event.description && (
            <>
              <h4>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
              <p>{event.content}</p>
            </>
          )}
        </div>
        
        {/* –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ */}
        <div className={styles.eventLocation}>
          <h3>üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</h3>
          <div className={styles.locationInfo}>
            <p><strong>–ì–æ—Ä–æ–¥:</strong> {event.city}</p>
            {event.metadata?.address && (
              <p><strong>–ê–¥—Ä–µ—Å:</strong> {event.metadata.address}</p>
            )}
            <div className={styles.routeLink}>
              <a 
                href={generate2GISLink()} 
                target="_blank" 
                rel="noopener noreferrer"
                className={styles.routeButton}
              >
                üó∫Ô∏è –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –≤ 2GIS
              </a>
            </div>
          </div>
        </div>
        
        {/* –¢–µ–≥–∏ */}
        {event.tags.length > 0 && (
          <div className={styles.eventTags}>
            <h3>üè∑Ô∏è –¢–µ–≥–∏</h3>
            <div className={styles.tagsContainer}>
              {renderTags()}
            </div>
          </div>
        )}
        
        {/* –†–µ–π—Ç–∏–Ω–≥ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ */}
        <div className={styles.eventStats}>
          <div className={styles.eventRating}>
            <h3>‚≠ê –†–µ–π—Ç–∏–Ω–≥</h3>
            <div className={styles.starsContainer}>
              {renderStars()}
              <span className={styles.ratingText}>
                ({averageScore > 0 ? averageScore.toFixed(1) : '0.0'})
              </span>
            </div>
            {scoresCount > 0 && (
              <p style={{ fontSize: '0.8rem', color: 'var(--dark-gray)', marginTop: '3px' }}>
                {scoresCount} –æ—Ü–µ–Ω–æ–∫
              </p>
            )}
          </div>
          
          <div className={styles.eventParticipants}>
            <h3>üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏</h3>
            <p>{event.usersIds.length} —á–µ–ª–æ–≤–µ–∫</p>
          </div>
        </div>
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ */}
        <div className={styles.authorInfo}>
          <div className={styles.authorAvatar}>
            {loadingAuthor ? (
              <div className={styles.avatarPlaceholder}>
                <div className={styles.avatarLoader}>‚è≥</div>
              </div>
            ) : authorData?.imageUrl ? (
              <img 
                src={authorData.imageUrl} 
                alt={authorData.username}
                onError={(e) => {
                  const target = e.target as HTMLImageElement;
                  target.style.display = 'none';
                  target.nextElementSibling?.classList.remove(styles.hidden);
                }}
              />
            ) : (
              <div className={styles.avatarPlaceholder}>
                {event.author.charAt(0).toUpperCase()}
              </div>
            )}
            {authorData?.imageUrl && (
              <div className={`${styles.avatarPlaceholder} ${styles.hidden}`}>
                {event.author.charAt(0).toUpperCase()}
              </div>
            )}
          </div>
          <div className={styles.authorDetails}>
            <div className={styles.authorName}>
              <strong>
                {authorData?.firstName && authorData?.lastName 
                  ? `${authorData.firstName} ${authorData.lastName}`
                  : event.author
                }
              </strong>
            </div>
            <div className={styles.authorRole}>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å–æ–±—ã—Ç–∏—è</div>
            <div className={styles.authorUsername}>@{event.author}</div>
            {authorData?.bio && (
              <div className={styles.authorBio}>{authorData.bio}</div>
            )}
            <div className={styles.eventCreated}>
              –°–æ–∑–¥–∞–Ω–æ: {formatDate(event.dateTime)}
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default EventMain;