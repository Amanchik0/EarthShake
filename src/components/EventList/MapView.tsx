import React, { useState } from 'react';
import styles from '../../features/Events/EventsListPage/EventsListPage.module.css';
import Map from '../MapComponent'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç—ã
import { EventDetails } from '../../types/event';
import type { Feature, Polygon } from 'geojson';

interface MapViewProps {
  isFullMap: boolean;
  onToggleFullMap: () => void;
  events: EventDetails[]; 
  selectedEventId?: string | null; // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–ø
  onEventSelect?: (eventId: string | null) => void; // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–ø
}

const MapView: React.FC<MapViewProps> = ({ 
  isFullMap, 
  onToggleFullMap, 
  events,
  selectedEventId = null,
  onEventSelect
}) => {
  const [showAreaSelection, setShowAreaSelection] = useState(false);
  const [selectedArea, setSelectedArea] = useState<Feature<Polygon> | null>(null);

  const toggleAreaSelection = () => {
    setShowAreaSelection(!showAreaSelection);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∫–∞—Ä—Ç–µ
  const handleEventSelect = (eventId: string | null) => {
    console.log('üó∫Ô∏è MapView: –í—ã–±—Ä–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ:', eventId);
    if (onEventSelect) {
      onEventSelect(eventId);
    }
  };

  return (
    <div className={styles.mapView}>
      <div className={styles.mapControls}>
        <button className={styles.mapButton} onClick={onToggleFullMap}>
          {isFullMap ? '–°–≤–µ—Ä–Ω—É—Ç—å –∫–∞—Ä—Ç—É' : '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –∫–∞—Ä—Ç—É'}
        </button>
        <button className={styles.mapButton} onClick={toggleAreaSelection}>
          {showAreaSelection ? '–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä' : '–í—ã–±—Ä–∞—Ç—å –æ–±–ª–∞—Å—Ç—å'}
        </button>
        
        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏ */}
        {selectedEventId && (
          <div className={styles.selectedEventMapInfo}>
            {(() => {
              const selectedEvent = events.find(e => e.id === selectedEventId);
              return selectedEvent ? (
                <div className={styles.mapEventBanner}>
                  <span className={styles.eventTitle}>
                    üìç {selectedEvent.title}
                  </span>
                  <span className={styles.eventLocation}>
                    {selectedEvent.city}
                  </span>
                  <button 
                    onClick={() => window.location.href = `/events/${selectedEventId}`}
                    className={styles.viewEventMapButton}
                  >
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </button>
                  <button 
                    onClick={() => handleEventSelect(null)}
                    className={styles.clearMapSelectionButton}
                  >
                    ‚úï
                  </button>
                </div>
              ) : null;
            })()}
          </div>
        )}
      </div>
      
      <div className={styles.mapContainer}>
        <Map 
          events={events.map(event => ({
            id: event.id,
            lat: event.lat || 0,
            lng: event.lng || 0,
            title: event.title,
            tag: event.tag, // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
            city: event.city,
            rating: event.rating,
            description: event.description,
          }))}
          selectedArea={selectedArea}
          onSelectArea={setSelectedArea}
          selectedEventId={selectedEventId} // –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
          onEventSelect={handleEventSelect} // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞
          mode="events"
        />
      </div>
    </div>
  );
};

export default MapView;