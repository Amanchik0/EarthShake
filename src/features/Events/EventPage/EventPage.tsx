import React, { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import EventHeader from '../../../components/Event/EventHeader';
import EventMain from '../../../components/Event/EventMain';
import CommentSection from '../../../components/Event/CommentSection';
import Recommendations from '../../../components/Event/Recomemdations/Recommendations';
import { BackendEventData, RecommendedEvent } from '../../../types/event';
import styles from './EventPage.module.css';

const EventPage: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  
  const [event, setEvent] = useState<BackendEventData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [recommendations, setRecommendations] = useState<RecommendedEvent[]>([]);

  useEffect(() => {
    const fetchEvent = async () => {
      if (!id) {
        setError('ID —Å–æ–±—ã—Ç–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω');
        setLoading(false);
        return;
      }

      try {
        console.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏–µ —Å ID: ${id}`);
        
        const response = await fetch(`http://localhost:8090/api/events/${id}`);
        
        if (!response.ok) {
          if (response.status === 404) {
            throw new Error('–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
          }
          throw new Error(`–û—à–∏–±–∫–∞ ${response.status}: ${response.statusText}`);
        }
        
        const data: BackendEventData = await response.json();
        console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:', data);
        
        setEvent(data);
        setError(null);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏—è:', err);
        setError(err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      } finally {
        setLoading(false);
      }
    };

    fetchEvent();
  }, [id]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  useEffect(() => {
    const loadRecommendations = async () => {
      // TODO: –†–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
      // const response = await fetch(`http://localhost:8090/api/events/recommendations/${id}`);
      // const data = await response.json();
      // return data;
      
      // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–∫–∞ —á—Ç–æ
      const mockRecommendations: RecommendedEvent[] = [
        {
          id: '1',
          title: '–ö–æ–Ω—Ü–µ—Ä—Ç –≤ –ø–∞—Ä–∫–µ',
          date: '30 –º–∞—è 2025',
          type: '–ú—É–∑—ã–∫–∞',
          imageUrl: '/api/placeholder/200/150'
        },
        {
          id: '2', 
          title: '–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
          date: '1 –∏—é–Ω—è 2025',
          type: '–°–ø–æ—Ä—Ç',
          imageUrl: '/api/placeholder/200/150'
        },
        {
          id: '3',
          title: '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Å–µ–º–∏–Ω–∞—Ä',
          date: '3 –∏—é–Ω—è 2025', 
          type: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
          imageUrl: '/api/placeholder/200/150'
        }
      ];
      
      setRecommendations(mockRecommendations);
    };

    loadRecommendations();
  }, [id]);

  const handleBack = () => {
    navigate(-1);
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading) {
    return (
      <div className={styles.container}>
        <div className={styles.loading}>
          <div className={styles.spinner}></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è...</p>
        </div>
      </div>
    );
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏
  if (error || !event) {
    return (
      <div className={styles.container}>
        <div className={styles.error}>
          <h2>üòû –û—à–∏–±–∫–∞</h2>
          <p>{error || '–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}</p>
          <button onClick={handleBack} className={styles.backButton}>
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.container}>
      <EventHeader 
        onBack={handleBack} 
        eventType={event.eventType}
        styles={styles}
      />
      
      <main className={styles.main}>
        <EventMain event={event}      styles={styles}/>
        <CommentSection comments={event.comments}      styles={styles}/>
        <Recommendations events={recommendations}     styles={styles} />
      </main>
    </div>
  );
};

export default EventPage; 

